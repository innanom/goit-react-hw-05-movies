{"version":3,"file":"static/js/186.cfc6daf0.chunk.js","mappings":"8LA4BA,UAxBgB,WAEZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,WACDF,IACLG,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAWM,EAAf,GACzC,GAAE,CAACL,IAGCF,EAAQQ,OAAS,GACT,wBACIR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACb,2BACI,uCAAeD,MACf,uBAAKC,MAFAF,EADI,OAQf,mEAEjB,C,sLCzBKG,E,OAAWC,EAAAA,OAAe,CAC5BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,+GAENL,EAAQM,IAAI,uBAFN,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,yDAMtB,KAAMC,SANgB,yDAAH,qDAWjBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDX,EAAQM,IAAI,gBAAiB,CAClDH,OAAQ,CAACS,SAAU,QAASC,KAAM,EAAGC,eAAe,EAAOH,MAAAA,KAHrC,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,yDAQjB,KAAME,SARW,yDAAH,sDAYZM,EAAe,mCAAG,WAAMC,GAAN,kGAEJhB,EAAQM,IAAR,iBAAsBU,GAAY,CACvDb,OAAQ,CAACS,SAAU,WAHM,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,yDAQpB,KAAME,SARc,yDAAH,sDAYfQ,EAAe,mCAAG,WAAMD,GAAN,kGAEJhB,EAAQM,IAAR,gBAAqBU,EAArB,YAAyC,CAC9Db,OAAQ,CAAES,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKW,MALe,yDAQpB,KAAMT,SARc,yDAAH,sDAYfjB,EAAe,mCAAG,WAAMwB,GAAN,kGAEJhB,EAAQM,IAAR,gBAAqBU,EAArB,YAAyC,CAC9Db,OAAQ,CAAES,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,yDAQpB,KAAMC,SARc,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"../../services/fetchMovies\"\n\nconst Reviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n        if (!movieId) return;\n        getMovieReviews(movieId).then(response => setReviews(response));\n    }, [movieId]);\n\n    return (\n        (reviews.length > 0) ? (\n                 <ul>\n                    {reviews.map(({ id, author, content }) => (\n                    <li key={id}>\n                        <span>Author: {author}</span>\n                        <p>{ content }</p>\n                    </li>\n                     ))}\n                </ul>\n                   \n            ) : ( <p>We don't have any reviews for this movie</p> )\n    )\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst request =  axios.create ( { \n    baseURL: 'https://api.themoviedb.org/3', \n    params: {\n        api_key: '3f49b3b9ed9e869041581873eb04aafc',\n    },\n} ) ;\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await request.get('/trending/movie/day');\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await request.get('/search/movie', {\n      params: {language: 'en-US', page: 1, include_adult: false, query}\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieDetails = async movie_id => {\n  try {\n    const { data } = await request.get(`/movie/${movie_id}`, {\n      params: {language: 'en-US' },\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieCredits = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/credits`, {\n      params: { language: 'en-US'}\n    });\n    return data.cast;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieReviews = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/reviews`, {\n      params: { language: 'en-US'}\n    });\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\n\n\n\n\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","response","length","map","id","author","content","request","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","message","searchMovies","query","language","page","include_adult","getMovieDetails","movie_id","getMovieCredits","cast"],"sourceRoot":""}