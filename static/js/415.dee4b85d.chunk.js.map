{"version":3,"file":"static/js/415.dee4b85d.chunk.js","mappings":"oKAkBA,IAf2B,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACP,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACKG,KAFAC,EADF,KAStB,C,8ECID,UAhBa,WACT,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAQ,OAAIJ,EAAkBI,EAAtB,GACpC,GAAE,KAGC,4BACI,4CACA,SAAC,IAAD,CAAYf,MAAOU,MAI9B,C,sLChBKM,E,OAAWC,EAAAA,OAAe,CAC5BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJP,EAAiB,mCAAG,+GAENG,EAAQK,IAAI,uBAFN,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,yDAMtB,KAAMC,SANgB,yDAAH,qDAWjBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDV,EAAQK,IAAI,gBAAiB,CAClDF,OAAQ,CAACQ,SAAU,QAASC,KAAM,EAAGC,eAAe,EAAOH,MAAAA,KAHrC,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,yDAQjB,KAAME,SARW,yDAAH,sDAYZM,EAAe,mCAAG,WAAMC,GAAN,kGAEJf,EAAQK,IAAR,iBAAsBU,GAAY,CACvDZ,OAAQ,CAACQ,SAAU,WAHM,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,yDAQpB,KAAME,SARc,yDAAH,sDAYfQ,EAAe,mCAAG,WAAMD,GAAN,kGAEJf,EAAQK,IAAR,gBAAqBU,EAArB,YAAyC,CAC9DZ,OAAQ,CAAEQ,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKW,MALe,yDAQpB,KAAMT,SARc,yDAAH,sDAYfU,EAAe,mCAAG,WAAMH,GAAN,kGAEJf,EAAQK,IAAR,gBAAqBU,EAArB,YAAyC,CAC9DZ,OAAQ,CAAEQ,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,yDAQpB,KAAMC,SARc,yDAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ListTrendingMovies = ({ array }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {array.map(({ title, id }) => (\n                <li key={id}>\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                        {title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n     );\n};\n\nexport default ListTrendingMovies;\n\nListTrendingMovies.propTypes = {\n    array: PropTypes.arrayOf(\n        PropTypes.exact({\n            title: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        }))\n}","import { useEffect, useState } from \"react\";\nimport { getTrendingMovies } from \"../services/fetchMovies\"\nimport MoviesList from \"../components/MoviesList/MoviesList\"\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n\n    useEffect(() => {\n        getTrendingMovies().then(response => setTrendingMovies(response));\n    }, [])\n\n    return (\n        <div>\n            <h1>Trending today</h1> \n            <MoviesList array={trendingMovies} />\n        </div>\n        \n    )\n};\n\nexport default Home;","import axios from 'axios';\n\nconst request =  axios.create ( { \n    baseURL: 'https://api.themoviedb.org/3', \n    params: {\n        api_key: '3f49b3b9ed9e869041581873eb04aafc',\n    },\n} ) ;\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await request.get('/trending/movie/day');\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await request.get('/search/movie', {\n      params: {language: 'en-US', page: 1, include_adult: false, query}\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieDetails = async movie_id => {\n  try {\n    const { data } = await request.get(`/movie/${movie_id}`, {\n      params: {language: 'en-US' },\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieCredits = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/credits`, {\n      params: { language: 'en-US'}\n    });\n    return data.cast;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieReviews = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/reviews`, {\n      params: { language: 'en-US'}\n    });\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\n\n\n\n\n"],"names":["array","location","useLocation","map","title","id","to","state","from","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","response","request","axios","baseURL","params","api_key","get","data","results","message","searchMovies","query","language","page","include_adult","getMovieDetails","movie_id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}