{"version":3,"file":"static/js/76.dcbf5be1.chunk.js","mappings":"yNACA,EAAsB,kB,SC4BtB,EAxBa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAOP,OALAE,EAAAA,EAAAA,YAAU,WACDF,IACLG,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAAZ,GACzC,GAAE,CAACL,IAGCF,EAAKQ,OAAS,GACN,wBACJR,EAAKS,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACN,2BACI,gBAAKC,UAAWC,EAASC,IAAG,yCAAoCL,GAAgBM,IAAKL,KACrF,uBAAIA,KACJ,uCAAeC,OAHVH,EADH,OAQJ,gEAEjB,C,sLCzBKQ,E,OAAWC,EAAAA,OAAe,CAC5BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,+GAENL,EAAQM,IAAI,uBAFN,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,yDAMtB,KAAMC,SANgB,yDAAH,qDAWjBC,EAAY,mCAAG,WAAMC,GAAN,kGAEDX,EAAQM,IAAI,gBAAiB,CAClDH,OAAQ,CAACS,SAAU,QAASC,KAAM,EAAGC,eAAe,EAAOH,MAAAA,KAHrC,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,yDAQjB,KAAME,SARW,yDAAH,sDAYZM,EAAe,mCAAG,WAAMC,GAAN,kGAEJhB,EAAQM,IAAR,iBAAsBU,GAAY,CACvDb,OAAQ,CAACS,SAAU,WAHM,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,yDAQpB,KAAME,SARc,yDAAH,sDAYftB,EAAe,mCAAG,WAAM6B,GAAN,kGAEJhB,EAAQM,IAAR,gBAAqBU,EAArB,YAAyC,CAC9Db,OAAQ,CAAES,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKzB,MALe,yDAQpB,KAAM2B,SARc,yDAAH,sDAYfQ,EAAe,mCAAG,WAAMD,GAAN,kGAEJhB,EAAQM,IAAR,gBAAqBU,EAArB,YAAyC,CAC9Db,OAAQ,CAAES,SAAU,WAHK,uBAEnBL,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKC,SALe,yDAQpB,KAAMC,SARc,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/fetchMovies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCredits } from \"../../services/fetchMovies\"\nimport css from \"./Cast.module.css\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const {movieId} = useParams()\n\n    useEffect(() => {\n        if (!movieId) return;\n        getMovieCredits(movieId).then(response => setCast(response)); \n    }, [movieId]);\n   \n    return (\n        (cast.length > 0) ? (\n                 <ul>\n            {cast.map(({id, profile_path, name, character}) => (\n                <li key={id}>\n                    <img className={css.img} src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} />\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                </li>\n            ))}\n        </ul>                   \n            ) : ( <p>We don't have any cast for this movie</p> )\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst request =  axios.create ( { \n    baseURL: 'https://api.themoviedb.org/3', \n    params: {\n        api_key: '3f49b3b9ed9e869041581873eb04aafc',\n    },\n} ) ;\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await request.get('/trending/movie/day');\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await request.get('/search/movie', {\n      params: {language: 'en-US', page: 1, include_adult: false, query}\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieDetails = async movie_id => {\n  try {\n    const { data } = await request.get(`/movie/${movie_id}`, {\n      params: {language: 'en-US' },\n    });\n    return data;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieCredits = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/credits`, {\n      params: { language: 'en-US'}\n    });\n    return data.cast;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\nexport const getMovieReviews = async movie_id => {\n  try {\n    const { data } = await request.get(`movie/${movie_id}/reviews`, {\n      params: { language: 'en-US'}\n    });\n    return data.results;\n   \n  } catch (error) {\n    return error.message;\n  }\n}\n\n\n\n\n\n\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","then","response","length","map","id","profile_path","name","character","className","css","src","alt","request","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","message","searchMovies","query","language","page","include_adult","getMovieDetails","movie_id","getMovieReviews"],"sourceRoot":""}